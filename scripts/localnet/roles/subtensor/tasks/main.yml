- name: Clone Subtensor repository
  git:
    repo: https://github.com/opentensor/subtensor.git
    dest: "{{ ansible_env.HOME }}/subtensor"
    version: main
    update: yes
  tags: subtensor

- name: Check if init has been run
  stat:
    path: "{{ ansible_env.HOME }}/.cargo/env"
  register: cargo_env
  tags: subtensor

- name: Initialize Subtensor (Rust nightly toolchain)
  shell: "bash -c 'source {{ ansible_env.HOME }}/.cargo/env && ./scripts/init.sh'"
  args:
    chdir: "{{ ansible_env.HOME }}/subtensor"
  when: not cargo_env.stat.exists
  tags: subtensor

- name: Check if binary is built
  stat:
    path: "{{ ansible_env.HOME }}/subtensor/target/release/node-subtensor"
  register: subtensor_binary
  tags: subtensor

- name: Run cargo build
  shell: "bash -c 'source {{ ansible_env.HOME }}/.cargo/env && cargo build --release'"
  args:
    chdir: "{{ ansible_env.HOME }}/subtensor"
  when: not subtensor_binary.stat.exists
  tags: subtensor

- name: Build Subtensor node (fast blocks disabled)
  shell: "bash -c 'source {{ ansible_env.HOME }}/.cargo/env && BUILD_BINARY=1 ./scripts/localnet.sh --build-only'"
  args:
    chdir: "{{ ansible_env.HOME }}/subtensor"
  when: not subtensor_binary.stat.exists
  tags: subtensor

- name: Check if Subtensor RPC is already running and responsive
  shell: "curl -s -H 'Content-Type: application/json' -d '{\"id\":1, \"jsonrpc\":\"2.0\", \"method\": \"system_health\", \"params\":[]}' http://127.0.0.1:9944 | grep -q result"
  register: subtensor_already_running
  failed_when: false
  changed_when: false
  tags: subtensor

- name: Debug Subtensor runtime status
  debug:
    msg: "Existing Subtensor RPC service detected and responding: {{ subtensor_already_running.rc == 0 }}"
  tags: subtensor

- name: Check if Subtensor PM2 process is running
  shell: pm2 list | grep Subtensor
  register: pm2_check
  failed_when: false
  changed_when: false
  when: subtensor_already_running.rc != 0
  tags: subtensor

- name: Start Subtensor node with PM2
  shell: pm2 start ./scripts/localnet.sh --name "Subtensor" --interpreter bash --cwd "{{ ansible_env.HOME }}/subtensor" -- False --no-purge
  args:
    chdir: "{{ ansible_env.HOME }}/subtensor"
  environment:
    PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}"
  when: subtensor_already_running.rc != 0 and pm2_check.rc != 0
  tags: subtensor

- name: Wait for Subtensor RPC port 9944 to be available
  wait_for:
    host: 127.0.0.1
    port: 9944
    state: started
    timeout: 600
    delay: 5
  when: subtensor_already_running.rc != 0
  tags: subtensor

- name: Verify Subtensor node is responding to RPC requests
  shell: "curl -s -H 'Content-Type: application/json' -d '{\"id\":1, \"jsonrpc\":\"2.0\", \"method\": \"system_health\", \"params\":[]}' http://127.0.0.1:9944 | grep -q result"
  register: rpc_check
  retries: 20
  delay: 10
  until: rpc_check.rc == 0
  failed_when: rpc_check.rc != 0 and rpc_check.attempts|default(0) >= 20
  when: subtensor_already_running.rc != 0
  tags: subtensor

- name: Final verification of Subtensor operational status
  shell: "curl -s -H 'Content-Type: application/json' -d '{\"id\":1, \"jsonrpc\":\"2.0\", \"method\": \"system_name\", \"params\":[]}' http://127.0.0.1:9944"
  register: subtensor_system_name
  failed_when: false
  changed_when: false
  tags: subtensor

- name: Report Subtensor operational status
  debug:
    msg: "Subtensor is operational: {{ 'Subtensor' in subtensor_system_name.stdout }}"
  tags: subtensor
