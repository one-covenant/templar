# Grafana NGINX server configuration - Basic working configuration
# Generated by Ansible - DO NOT EDIT MANUALLY

{% if nginx_ssl_enabled %}
# HTTP server to redirect to HTTPS
server {
    listen 80;
    server_name {{ grafana_domain }};

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif %}

server {
{% if nginx_ssl_enabled %}
    listen 443 ssl http2;
    
    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/nginx_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/nginx_key.pem;
    
    # SSL protocol and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # SSL session parameters
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
{% else %}
    listen 80;
{% endif %}

    server_name {{ grafana_domain }};

    # Logging configuration
    access_log /var/log/nginx/grafana.access.log;
    error_log /var/log/nginx/grafana.error.log;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Reverse proxy configuration for Grafana
    location / {
        # Redirect to kiosk mode for clean UI without navigation bars
        rewrite ^/$ /d/templar_metrics/templar-metrics?kiosk=tv&orgId=1 redirect;

        proxy_pass http://127.0.0.1:{{ grafana_http_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Buffer settings
        proxy_buffering on;
        proxy_buffers 8 4k;

        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }

    # Allow direct dashboard access without kiosk mode for admins
    location /d/ {
        proxy_pass http://127.0.0.1:{{ grafana_http_port }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Buffer settings
        proxy_buffering on;
        proxy_buffers 8 4k;

        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }

    # Version API endpoints
    location /api/templar/version {
        proxy_pass http://127.0.0.1:8585/version;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

        # Cache version info for 1 hour
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }

    # Plain text version API
    location /api/templar/version/plain {
        proxy_pass http://127.0.0.1:8585/version/plain;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

        # Cache version info for 1 hour
        proxy_cache_valid 200 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }
}