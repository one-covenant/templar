# Loki NGINX server configuration
# Generated by Ansible - DO NOT EDIT MANUALLY

# Upstream server for Loki
upstream loki_backend {
    server 127.0.0.1:{{ loki_http_listen_port }};
    keepalive 64;
}

{% if nginx_ssl_enabled %}
# HTTP server to redirect to HTTPS
server {
    listen 80;
    server_name {{ loki_domain }};

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif %}

server {
{% if nginx_ssl_enabled %}
    listen 443 ssl http2;

    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/nginx_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/nginx_key.pem;

    # SSL protocol and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # SSL session parameters
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
{% else %}
    listen 80;
{% endif %}

    server_name {{ loki_domain }};

    # Logging configuration
    access_log /var/log/nginx/loki.access.log;
    error_log /var/log/nginx/loki.error.log;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # API endpoint for pushing logs
    location = /loki/api/v1/push {
        # CORS headers for push endpoint
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://loki_backend/loki/api/v1/push;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Adjust buffer sizes and timeouts for log pushing
        client_body_buffer_size 512k;
        client_max_body_size 5m;
        proxy_buffering off;
        proxy_request_buffering off;

        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(10) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(30) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(30) }}s;
    }

    # Other Loki API endpoints
    location ~ ^/loki/api/ {
        # CORS headers for other API endpoints
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://loki_backend$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Buffer settings
        proxy_buffering on;
        proxy_buffers 8 8k;

        # Timeouts for queries
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(300) }}s;
    }

    # Prometheus metrics endpoint
    location = /metrics {
        proxy_pass http://loki_backend/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Restrict access to metrics endpoint
        {% if nginx_metrics_allowed_cidrs is defined %}
        {% for cidr in nginx_metrics_allowed_cidrs %}
        allow {{ cidr }};
        {% endfor %}
        deny all;
        {% endif %}
    }

    # Root path redirects to ready endpoint
    location = / {
        return 302 /ready;
    }

    # Health check endpoints
    location ~ ^/(ready|healthy) {
        proxy_pass http://loki_backend$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Cache health check responses
        proxy_cache_valid 200 10s;
    }

    # Deny everything else
    location / {
        return 404;
    }
}
